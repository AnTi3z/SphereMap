import logging
import random
import time

from telethon import events

from .sphere import BOT_ID, global_state, Task
from timer import Timer

logger = logging.getLogger('Sphere.stealer')
logger.setLevel(logging.INFO)

MODULE_CFG = {}

steal_timer = Timer(lambda: setattr(global_state, 'task', Task.STEALING), "StealTimer")
steal_fighting = False

_ready_re = r"(?s)^üßôüèª‚Äç‚ôÇÔ∏è.+‚ù§Ô∏è\d+.+üõ°\d+.+üëä"
_steal_re = r"(?s)^(?:–ù–µ –Ω–∞–π–¥—è –Ω–∏—á–µ–≥–æ –ª—É—á—à–µ)|(?:–ü–æ–∏—Å–∫–∞–≤ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å–ª—É—á–∞–π)|(?:–ü–æ–±—Ä–æ–¥–∏–≤ –≤ –æ–∫—Ä—É–≥–µ)"
_wait_re = r"(?s)^–¢–µ–±–µ –ø–æ–∫–∞ —Ä–∞–Ω–æ –∏—Å–∫–∞—Ç—å –∂–µ—Ä—Ç–≤—É.+–ß–µ—Ä–µ–∑(?: (\d{1,2}) —á.)?(?: (\d{1,2}) –º.)?(?: (\d{1,2}) —Å.)?"


@events.register(events.MessageEdited(chats=(BOT_ID,), pattern=_ready_re))
@events.register(events.NewMessage(chats=(BOT_ID,), pattern=_ready_re))
async def ready_handler(event):
    if global_state.task == Task.STEALING:
        time.sleep(random.uniform(1.1, 2.5))
        await event.respond("üîÆ –°—Ñ–µ—Ä–∏—É–º")
        time.sleep(random.uniform(1.1, 2.5))
        await event.respond("ü¶πüèº‚Äç‚ôÇÔ∏è –í–æ—Ä–æ–≤—Å—Ç–≤–æ")


@events.register(events.MessageEdited(chats=(BOT_ID,), pattern=_steal_re))
@events.register(events.NewMessage(chats=(BOT_ID,), pattern=_steal_re))
async def steal_handler(event):
    btn = event.buttons[0][1]
    logger.debug(f"New steal message with button: {btn.data.decode()}")
    if global_state.task == Task.STEALING:
        logger.info(f"Click button: {btn.data.decode()}")
        await btn.click()

        global_state.task = Task.NONE
        steal_timer.start(1800+15)  # half hours


@events.register(events.MessageEdited(chats=(BOT_ID,), pattern=_wait_re))
@events.register(events.NewMessage(chats=(BOT_ID,), pattern=_wait_re))
async def wait_handler(event):
    time_remain = 0
    if event.pattern_match.group(1):
        time_remain += int(event.pattern_match.group(1)) * 3600  # hours
    if event.pattern_match.group(2):
        time_remain += int(event.pattern_match.group(2)) * 60  # minutes
    if event.pattern_match.group(3):
        time_remain += int(event.pattern_match.group(3))  # seconds
    logger.debug(f"Steal search time remain: {time_remain}")

    global_state.task = Task.NONE
    steal_timer.start(time_remain-5400+15)


_steal_money_re = r"(?s)^–¢—ã –≤—ã–∫—Ä–∞–ª.+üí∞(\d+)"
_steal_box_re = r"(?s)^–¢–µ–±–µ —É–¥–∞–ª–æ—Å—å —É–∫—Ä–∞—Å—Ç—å (.+)!"  # –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
_steal_item_re = r"(?s)^–¢–µ–±–µ —É–¥–∞–ª–æ—Å—å —Å–≤–æ—Ä–æ–≤–∞—Ç—å (.+)!"  # –±–∏–ª–µ—Ç/–∫–ª—é—á
_steal_fight_re = r"(?s)^–ö—Ä–∞–∂–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, (?:–¥—Ä–∞–∫–∞|—Å—Ä–∞–∂–µ–Ω–∏–µ)"
_steal_empty_re = r"(?s)^–£–≤—ã, –Ω–∏—á–µ–≥–æ —É–∫—Ä–∞—Å—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å. –ó–∞—Ç–æ –∏ –Ω–µ –ø—Ä–∏–ª–µ—Ç–µ–ª–æ –ø–æ –±–∞—à–∫–µ."
_steal_stone_re = r"(?s)^–ö—Ä–∞–∂–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å.+–ó–∞—â–∏—Ç–Ω—ã–π –∫–∞–º–µ–Ω—å"


@events.register(events.NewMessage(chats=(BOT_ID,), pattern=_steal_money_re))
async def steal1_handler(event):
    logger.info(f"Steal money: {event.pattern_match.group(1)}")
    time.sleep(random.uniform(1.1, 2.5))
    await event.respond("üèò –ë–∞—Ä–∞–∫–∏")


@events.register(events.NewMessage(chats=(BOT_ID,), pattern=_steal_box_re))
async def steal2_handler(event):
    logger.info(f"Steal box: {event.pattern_match.group(1)}")
    time.sleep(random.uniform(1.1, 2.5))
    await event.respond("üèò –ë–∞—Ä–∞–∫–∏")


@events.register(events.NewMessage(chats=(BOT_ID,), pattern=_steal_item_re))
async def steal3_handler(event):
    logger.info(f"Steal jackpot: {event.pattern_match.group(1)}")
    time.sleep(random.uniform(1.1, 2.5))
    await event.respond("üèò –ë–∞—Ä–∞–∫–∏")


@events.register(events.NewMessage(chats=(BOT_ID,), pattern=_steal_fight_re))
async def steal4_handler(event):
    global steal_fighting
    steal_fighting = True
    logger.info(f"Steal with fight!")


@events.register(events.NewMessage(chats=(BOT_ID,), pattern=_steal_empty_re))
async def steal5_handler(event):
    logger.info(f"Steal with nothing!")
    time.sleep(random.uniform(1.1, 2.5))
    await event.respond("üèò –ë–∞—Ä–∞–∫–∏")


@events.register(events.NewMessage(chats=(BOT_ID,), pattern=_steal_stone_re))
async def steal6_handler(event):
    logger.info(f"Failed steal(stone)")
    time.sleep(random.uniform(1.1, 2.5))
    await event.respond("üèò –ë–∞—Ä–∞–∫–∏")


@events.register(events.MessageEdited(chats=(BOT_ID,), pattern="(?s)–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥ –±–æ—è:"))
@events.register(events.NewMessage(chats=(BOT_ID,), pattern="(?s)–ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥ –±–æ—è:"))
async def fight_end(event):
    global steal_fighting
    if steal_fighting:
        steal_fighting = False
        time.sleep(random.uniform(1.1, 2.5))
        await event.respond("üèò –ë–∞—Ä–∞–∫–∏")


def activate():
    logger.info("Sphere.Stealer script activated")


def deactivate():
    logger.info("Sphere.Stealer script deactivated")


HANDLERS = (ready_handler, steal_handler, wait_handler,
            steal1_handler, steal2_handler, steal3_handler,
            steal4_handler, steal5_handler, steal6_handler,
            fight_end)
